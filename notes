
    location /auth/oauth2/authorize {
        proxy_pass http://authentication:8000;  # Forward to the backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Ensure CORS headers are forwarded properly for this route
        add_header Access-Control-Allow-Origin https://localhost;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
    }

    location /auth/oauth2/callback {
        proxy_pass http://authentication:8000;  # Forward to the backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Ensure CORS headers are forwarded properly for this route
        add_header Access-Control-Allow-Origin https://localhost;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
    }

    # Handle OPTIONS requests (CORS preflight)
    location /auth/oauth2/ {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin https://localhost;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
            add_header Access-Control-Max-Age 1728000;
            return 204;  # Respond to preflight requests with no content
        }
    }